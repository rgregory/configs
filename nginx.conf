daemon off;
user  apache;
worker_processes  1;
worker_rlimit_nofile 65000;

events {
  worker_connections  2048;
  use epoll;
  multi_accept on;
}

http {

  include mime.types;
  default_type  application/octet-stream;
  server_tokens off;
  error_log /dev/stdout;
  access_log off;

  if ($request_method !~ ^(GET|HEAD|POST)$ ) {
    return 444;
  }

  # Send content as soon as possible, but
  # be aggressive closing connections
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on; 
  keepalive_timeout 30;
  keepalive_requests 100000;
  client_header_timeout 20;
  client_body_timeout 20;
  send_timeout 20;
  reset_timedout_connection on;

  # Compression = compact content
  #
  gzip on;
  gzip_proxied any;
  gzip_min_length 256;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
  gzip_disable "MSIE [1-6]\.";

  # Aggressively cache file handles
  #
  open_file_cache max=200000 inactive=20s; 
  open_file_cache_valid 30s; 
  open_file_cache_min_uses 2;
  open_file_cache_errors on;

  # Define backends
  #	
  upstream django {
    server unix:///tmp/django.sock;
  }

  # The main event
  #
  server {
    listen       80;
    server_name  localhost;
    charset utf-8;

    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    


    location /status {
      stub_status on;
      access_log  off;
      allow 127.0.0.1;
      deny all;
    }

    location ~* ^.+\.(?:css|cur|js|jpe?g|gif|htc|ico|png|html|xml|otf|ttf|eot|woff|svg)$ {
      gzip off
      access_log on; # on for debug
      expires 1d;
    }

    location / {
      uwsgi_pass  django;
      include     /usr/local/nginx/conf/uwsgi_params; 
    }

    # Sanity check
    # 
    #
    location ~ /\.ht {
      deny  all;
    }

    location ~ /\.svn {
      deny all;
    }	 
    
    location ~ /\.git {
      deny all;
    }	
  }
}
