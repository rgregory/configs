daemon off;
user apache;
worker_processes  1;
worker_rlimit_nofile 65000;

events {
  	worker_connections  2048;
	use epoll;
	multi_accept on;
}


http {
  	include	mime.types;
  	default_type  application/octet-stream;
	server_names_hash_bucket_size 128;
	server_tokens off;

  	error_log /dev/stdout info;
	access_log /dev/stdout;
	log_not_found off;
   
	# Header sanity
	#
	add_header X-Frame-Options SAMEORIGIN;
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";
	add_header X-Pilot "news";
	add_header Cache-Control "public, must-revalidate, proxy-revalidate";
 
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on; 
  	keepalive_timeout 30;
	keepalive_requests 100000;
	client_body_buffer_size 16k;
	client_header_timeout 35;
	client_body_timeout 35;
	large_client_header_buffers 4 4k;
	send_timeout 20;
	reset_timedout_connection on;
    
	gzip on;
	gzip_proxied any;
	gzip_min_length 256;
	gzip_proxied expired no-cache no-store private auth;
	gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
	gzip_disable "MSIE [1-6]\.";
	gzip_buffers 16 8k;
	
	open_file_cache max=200000 inactive=20s; 
	open_file_cache_valid 30s; 
	open_file_cache_min_uses 2;
	open_file_cache_errors on;

	# Define backends
	#	
	upstream newsapps {
		server unix:///tmp/newsapps.sock;
	}

  server {
    listen       80;
    server_name  localhost;
    charset utf-8;
		root /var/www/html/default;
		index  index.html index.htm;	

		# Only accept specific request types
		#
		if ($request_method !~ ^(GET|HEAD|POST)$ ) {
				return 444;
		}

		# Option module - needs to added during
		# compile time
		#
		location /f6e0bcc7dde91493ea3cbf1282b48300 {
			stub_status on;
		}

		location ~* ^.+\.(?:css|cur|js|jpe?g|gif|htc|ico|png|html|xml|otf|ttf|eot|woff|svg)$ {
			expires 30d;
		}

		location ~* \.(txt|log|git|svn)$ {
				deny all;
		}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location ~ /\.ht {
      deny  all;
    }
  }
	
include /usr/local/nginx/conf.d/*.conf;

}
